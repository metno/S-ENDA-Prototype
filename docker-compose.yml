---
version: '3.4'

x-restart:
  &default-restart-policy
  unless-stopped

x-logging:
  &default-logging-policy
    driver: journald

networks:
  event-engine-backend:

services:
  catalog-service-api:
    build:
      context: ./catalog-service-api
    image: docker.io/metno/senda-prototype:${VERSION:-dev}-catalog-service-api
    ports:
      - "8000:8000"
    environment:
      INDEXDB: "true"
      METADATA: "/mmd/nbs"
      OUTPUT_ISO: "/home/pycsw/iso_xml/nbs"
    volumes:
      - ./Volumes/pycsw/conf/pycsw.cfg:/etc/pycsw/pycsw.cfg
      - ./Volumes/pycsw/commands/pycsw_setup.sh:/usr/local/bin/pycsw_setup.sh
      - ./Volumes/pycsw/commands/mmd2isofix.py:/usr/local/bin/mmd2isofix.py
      - ./Volumes/pycsw/commands/mmd-to-iso.xsl:/usr/local/share/mmd-to-iso.xsl
      - ./Volumes/mmd:/mmd:ro
    entrypoint:
      - /bin/sh
      - /usr/local/bin/pycsw_setup.sh
    logging: *default-logging-policy
    restart: *default-restart-policy


  dynamic-geoassets-api:
    build:
      context: ./dynamic-geoassets-api
      dockerfile: Dockerfile
    image: docker.io/metno/senda-prototype:${VERSION:-dev}-dynamic-geoasset-api
    ports:
      - "8080:8080"
    logging: *default-logging-policy
    restart: *default-restart-policy

  data-dashboard:
    build:
      context: ./data-dashboard
      dockerfile: Dockerfile
    image: docker.io/metno/senda-prototype:${VERSION:-dev}-dash-board
    ports:
      - "8081:80"
    logging: *default-logging-policy
    restart: *default-restart-policy

  nats:
    image: nats:2.1
    networks:
      event-engine:
        aliases:
          - nats-main
    logging: *default-logging-policy
    restart: *default-restart-policy

  event-engine-sender:
    build:
      context: ./events
      dockerfile: Dockerfile.sender
    image: docker.io/metno/senda-prototype:${VERSION:-dev}-event-engine-sender
    environment:
      NATS_SERVER: "http://nats-main:4222"
      SUBJECT: "senda"
    networks:
      - event-engine
    logging: *default-logging-policy
    restart: *default-restart-policy

  event-engine-websocket-bridge:
    build:
      context: ./events
      dockerfile: Dockerfile.websocket-bridge
    image: docker.io/metno/senda-prototype:${VERSION:-dev}-event-engine-websocket-bridge
    environment:
    ports:
      - "8084:8084"
    network:
      - event-engine
    logging: *default-logging-policy
    restart: *default-restart-policy
